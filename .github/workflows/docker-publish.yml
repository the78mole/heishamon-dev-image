name: Build and Push Docker Images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.semver.outputs.version }}
      version_tag: ${{ steps.semver.outputs.version_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate semantic version
        id: semver
        uses: paulhatch/semantic-version@v5.4.0
        with:
          branch: main
          tag_prefix: "v"
          major_pattern: "/^(feat|fix|refactor)!:/"
          minor_pattern: "/^feat:/"
          version_format: "${major}.${minor}.${patch}"
          bump_each_commit: true

  build:
    runs-on: ubuntu-latest
    needs: version
    permissions:
      packages: write
      id-token: write
    strategy:
      matrix:
        include:
          - dockerfile: Dockerfile
            image: heishamon-dev
            context: .
            description: "Arduino CLI Development Environment"
          - dockerfile: Dockerfile.pio
            image: heishamon-pio
            context: .
            description: "Arduino CLI + PlatformIO Development Environment"
    name: Build ${{ matrix.description }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: ${{ ! env.ACT }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/the78mole/${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ needs.version.outputs.version }}
            type=raw,value=${{ needs.version.outputs.version_tag }}

      - name: Build and push
        if: ${{ ! env.ACT }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    runs-on: ubuntu-latest
    needs: [version, build]
    if: github.ref == 'refs/heads/main' 
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate release notes
        id: release_notes
        run: |
          # Get the previous tag
          PREVIOUS_TAG=$(git tag --sort=-version:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -2 | tail -1)
          if [ -z "$PREVIOUS_TAG" ]; then
            PREVIOUS_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          
          # Generate release notes
          echo "## What's Changed" > release_notes.md
          echo "" >> release_notes.md
          
          # Get commits since last tag
          git log ${PREVIOUS_TAG}..HEAD --pretty=format:"* %s (%h)" --no-merges >> release_notes.md
          echo "" >> release_notes.md
          echo "" >> release_notes.md
          
          # Add Docker images info
          echo "## Docker Images" >> release_notes.md
          echo "" >> release_notes.md
          echo "This release includes the following Docker images:" >> release_notes.md
          echo "" >> release_notes.md
          echo "* \`ghcr.io/the78mole/heishamon-dev:${{ needs.version.outputs.version }}\` - Arduino CLI Development Environment" >> release_notes.md
          echo "* \`ghcr.io/the78mole/heishamon-pio:${{ needs.version.outputs.version }}\` - Arduino CLI + PlatformIO Development Environment" >> release_notes.md
          echo "" >> release_notes.md
          echo "Pull the images with:" >> release_notes.md
          echo "\`\`\`bash" >> release_notes.md
          echo "docker pull ghcr.io/the78mole/heishamon-dev:${{ needs.version.outputs.version }}" >> release_notes.md
          echo "docker pull ghcr.io/the78mole/heishamon-pio:${{ needs.version.outputs.version }}" >> release_notes.md
          echo "\`\`\`" >> release_notes.md

      - name: Create GitHub Release
        if: ${{ ! env.ACT }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.version.outputs.version_tag }}
          name: Release ${{ needs.version.outputs.version_tag }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          generate_release_notes: true
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
